name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade wheel
          pip install -r requirements.txt
          maturin build -r
          for file in target/wheels/*.whl
          do
            name=${file##*/}
            pip install "$file"
          done
      - name: Test
        run: pytest .


  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
        cache: "pip"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel
        pip install -r requirements.txt
        maturin build -r
    - uses: knicknic/os-specific-run@v1
      with:
        linux: |
          maturin build -r
          for file in target/wheels/*.whl
          do
            name=${file##*/}
            pip install "$file"
          done
        windows: |
          $files = Get-ChildItem "target/wheels/"
          foreach ($f in $files) {
              pip install $f.FullName
          }
    - name: Build with pyinstaller
      run: pyinstaller -F weather.py -i ./icon/icon.png
    - uses: actions/upload-artifact@v3
      with:
        name: weather (Windows)
        path: ./dist/weather.exe
